generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  name     String?
  email    String   @unique
  password String
  role     String   // "Менеджер" | "Инженер" | "Наблюдатель"

  sessions Session[]
  accounts Account[]
}

model Log {
  id      String   @id @default(uuid())
  time    DateTime @default(now())
  action  String
  entity  String
  message String
}

model Project {
  id      String   @id @default(uuid())
  name    String
  status  String
  defects Defect[]
  logs    Log[]
}

model Defect {
  id          String   @id @default(uuid())
  title       String
  description String
  priority    String
  assignee    String
  deadline    DateTime
  attachments String[]
  status      String
  cost        Int
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   String
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
