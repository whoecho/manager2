"use client";

import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { projectsStore } from "@/stores/projectsStore";
import { FileDown, List, Pencil, Plus, Trash2 } from "lucide-react";
import { observer } from "mobx-react-lite";
import { useSession } from "next-auth/react";
import Link from "next/link";
import { useRouter } from "next/navigation";
import { useEffect } from "react";
import LogoutButton from "../logoutButton";

const Logs = observer(() => {
  const store = projectsStore;
  const session = useSession();
  const router = useRouter();

  if (session.status == "unauthenticated") {
    router.push("/"); // —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
  }

  useEffect(() => {
    store.fetchLogs();
    store.fetchProjects();
  }, []);

  // üî• –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const buildStats = () => {
    const stats = {
      projectsAdded: 0,
      projectsUpdated: 0,
      projectsDeleted: 0,
      defectsAdded: 0,
      defectsUpdated: 0,
      defectsDeleted: 0,
      defectsByStatus: {},
      totalCost: 0,
    };

    for (const log of store.logs) {
      if (log.entity === "–ü—Ä–æ–µ–∫—Ç") {
        if (log.action === "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ") stats.projectsAdded++;
        if (log.action === "–ò–∑–º–µ–Ω–µ–Ω–∏–µ") stats.projectsUpdated++;
        if (log.action === "–£–¥–∞–ª–µ–Ω–∏–µ") stats.projectsDeleted++;
      }
      if (log.entity === "–î–µ—Ñ–µ–∫—Ç") {
        if (log.action === "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ") stats.defectsAdded++;
        if (log.action === "–ò–∑–º–µ–Ω–µ–Ω–∏–µ") stats.defectsUpdated++;
        if (log.action === "–£–¥–∞–ª–µ–Ω–∏–µ") stats.defectsDeleted++;
      }
    }

    // —Å—á–∏—Ç–∞–µ–º –¥–µ—Ñ–µ–∫—Ç—ã –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å
    for (const project of store.projects) {
      for (const defect of project.defects) {
        stats.defectsByStatus[defect.status] =
          (stats.defectsByStatus[defect.status] || 0) + 1;
        stats.totalCost += defect.cost ?? 0;
      }
    }

    return stats;
  };

  // –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ CSV
  const exportReport = () => {
    const stats = buildStats();

    const lines = [
      "–ú–µ—Ç—Ä–∏–∫–∞;–ó–Ω–∞—á–µ–Ω–∏–µ",
      `–î–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤;${stats.projectsAdded}`,
      `–ò–∑–º–µ–Ω–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤;${stats.projectsUpdated}`,
      `–£–¥–∞–ª–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤;${stats.projectsDeleted}`,
      `–î–æ–±–∞–≤–ª–µ–Ω–æ –¥–µ—Ñ–µ–∫—Ç–æ–≤;${stats.defectsAdded}`,
      `–ò–∑–º–µ–Ω–µ–Ω–æ –¥–µ—Ñ–µ–∫—Ç–æ–≤;${stats.defectsUpdated}`,
      `–£–¥–∞–ª–µ–Ω–æ –¥–µ—Ñ–µ–∫—Ç–æ–≤;${stats.defectsDeleted}`,
      `–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–µ—Ñ–µ–∫—Ç–æ–≤;${stats.totalCost} ‚ÇΩ`,
      "",
      "–°—Ç–∞—Ç—É—Å—ã –¥–µ—Ñ–µ–∫—Ç–æ–≤;",
      ...Object.entries(stats.defectsByStatus).map(
        ([status, count]) => `${status};${count}`
      ),
    ];

    const csvContent = lines.join("\n");
    const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
    const url = window.URL.createObjectURL(blob);
    const link = document.createElement("a");
    link.href = url;
    link.setAttribute("download", "report.csv");
    link.click();
  };

  return (
    <div className="font-sans p-6 space-y-6">
      <div className="flex items-center gap-6">
        <Link href="/projects">–ü—Ä–æ–µ–∫—Ç—ã</Link>
        <Link href="/defects">–î–µ—Ñ–µ–∫—Ç—ã</Link>
        <LogoutButton />
        <div>–í—Ö–æ–¥ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω –∫–∞–∫ {session?.data?.user?.role}</div>
      </div>

      <Card>
        <CardHeader className="flex justify-between items-center">
          <CardTitle className="flex items-center gap-2">
            <List className="w-5 h-5" />
            –ñ—É—Ä–Ω–∞–ª –∏–∑–º–µ–Ω–µ–Ω–∏–π
          </CardTitle>
          <Button onClick={exportReport}>
            <FileDown className="w-4 h-4 mr-2" /> –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á—ë—Ç–∞
          </Button>
        </CardHeader>
        <CardContent className="space-y-4">
          {!store.logs || store.logs.length === 0 ? (
            <div className="text-gray-500">–ò–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</div>
          ) : (
            store.logs.map((log) => (
              <div
                key={log.id}
                className="p-3 border rounded-lg flex items-start gap-3 hover:bg-gray-50"
              >
                {log.action === "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ" && (
                  <Plus className="w-5 h-5 text-green-600 mt-1" />
                )}
                {log.action === "–ò–∑–º–µ–Ω–µ–Ω–∏–µ" && (
                  <Pencil className="w-5 h-5 text-blue-600 mt-1" />
                )}
                {log.action === "–£–¥–∞–ª–µ–Ω–∏–µ" && (
                  <Trash2 className="w-5 h-5 text-red-600 mt-1" />
                )}

                <div>
                  <div className="flex items-center gap-2">
                    <Badge variant="outline">{log.entity}</Badge>
                    <span className="text-xs text-gray-500">{log.time}</span>
                  </div>
                  <div className="text-sm mt-1">{log.message}</div>
                </div>
              </div>
            ))
          )}
        </CardContent>
      </Card>
    </div>
  );
});

export default Logs;
